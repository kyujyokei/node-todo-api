const {SHA256} = require('crypto-js');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcryptjs');

var password = '123abc!';

// salts password so it generates a different hash each time
// inputs: number of rounds to salt, call back funtion
bcrypt.genSalt(10, (error, salt) => {
    // actual hashing
    bcrypt.hash(password, salt, (err, hash) => {
        console.log(hash);
    });
});

// 
var hashPassword = '$2a$10$nRLf3QxGoYCw4dya2OJmGe2BSXq/.pXdl7GTR0bOD9ZYBcKK2JMFm'; // generated by the code above

bcrypt.compare(password, hashPassword, (err, res) => {
    console.log(res);
});

// var data = {
//     id: 10
// };

// // takes your data and creates sign, input: data, secret
// var token = jwt.sign(data, '123abc');
// console.log(token);

// // verifies if your token is valid and reveals the data within token
// var decoded = jwt.verify(token, '123abc');
// console.log(decoded);


// var message = 'I am user number 3';
// var hash = SHA256(message).toString();

// console.log(hash);

// var data = {
//     id: 4
// };

// var token = {
//     data: data,
//     hash: SHA256(JSON.stringify(data) + 'somesecret').toString()
// }

// // // a case that users attempt to manipulate other user's data
// // token.data.id = 5;
// // token.hash = SHA256(JSON.stringify(token.data)).toString();

// var resultHash = SHA256(JSON.stringify(token.data) + 'somesecret').toString();

// if (resultHash === token.hash){
//     console.log('NOT changed')
// } else {
//     console.log('Data got changed. Do not trust')
// }





